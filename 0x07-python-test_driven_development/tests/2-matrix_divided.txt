===============================
 Test for '2-matrix_divided'
===============================

First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Basic edge cases:
-----------------------

	>>> matrix = [[1, 2, 3],[4, 5, 6]]
    	>>> print(matrix_divided(matrix, 3))
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]


	>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


	>>> matrix_divided([[1]], 2)
	[[0.5]]


	>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3.14)
        [[0.32, 0.64, 0.96], [1.27, 1.59, 1.91]]


	>>> matrix_divided([[1.5, 2.4, 3.1], [4.3, 5.0, 6.8]], 2)
	[[0.75, 1.2, 1.55], [2.15, 2.5, 3.4]]


	>>> matrix_divided([[1.5, -2.4, 3.1], [4.3, 5.0, -6.8]], 2)
    	[[0.75, -1.2, 1.55], [2.15, 2.5, -3.4]]


	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Holberton")
    	Traceback (most recent call last):
        ...
	TypeError: div must be a number

More edge cases:
-----------------------

	>>> matrix_divided([[]], 1)
    	Traceback (most recent call last):
        ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    	Traceback (most recent call last):
    	...
	ZeroDivisionError: division by zero


	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float("inf"))
    	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]


	>>> matrix_divided()
    	Traceback (most recent call last):
        ...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


	>>> matrix_divided(5, 2)
    	Traceback (most recent call last):
        ...
	TypeError: object of type 'int' has no len()


	>>> matrix_divided((1, 2, 3), 1)
    	Traceback (most recent call last):
        ...
	TypeError: object of type 'int' has no len()


	>>> matrix_divided([[1, 2, 3], [4, 5]], 1)
    	Traceback (most recent call last):
        ...
	TypeError: Each row of the matrix must have the same size
